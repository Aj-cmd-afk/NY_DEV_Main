imports:
  MerchantOperatingCity: Domain.Types.Merchant.MerchantOperatingCity
  HighPrecMoney: Kernel.Types.Common
  UTCTime: Kernel.Prelude
  Person: Domain.Types.Person
  ShortId: Kernel.Types.Id

TicketPlace:
  tableName: ticket_place

  fields:
    id : Id TicketPlace
    merchantOperatingCityId : Id MerchantOperatingCity
    name : Text
    description : Maybe Text
    lat : Maybe Double
    lon : Maybe Double
    gallery : "[Text]"
    shortDesc : Text
    iconUrl : Maybe Text
    termsAndConditions : "[Text]"
    placeType : PlaceType #
    mapImageUrl : Maybe Text
    openTimings : Maybe TimeOfDay
    closeTimings : Maybe TimeOfDay

  types:
    PlaceType:
      enum: "Museum,ThemePark,AmusementPark,WaterPark,WildLifeSanctuary,ArtGallery,HeritageSite,ReligiousSite,Other"


  constraints:
    id: PrimaryKey|NotNull
    name: NotNull
    shortDesc: NotNull
    gallery: NotNull
    termsAndConditions: NotNull

  # default:
  #   gallery: []
  #   termsAndConditions: []

TicketService:
  tableName : ticket_service

  fields :
    id : Id TicketService
    placeId : Text
    serviceName : Text
    shortDesc : Maybe Text
    operationalDays : "[Text]"
    maxVerification : Int
    allowFutureBooking : Bool
    expiry : ExpiryType
    bussinessHours : "[Id BusinessHour]"
  types:
    ExpiryType:
      enum: "SameDay,NextDay,NextWeek,NextMonth"

  constraints :
    id : PrimaryKey | NotNull
    serviceName : NotNull
    placeId : NotNull
    bussinessHours : NotNull
    operationalDays : NotNull

  default:
    operationalDays: "{Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday}"

SpecialOccasion:
  tableName : special_occasion

  fields :
    id : Id SpecialOccasion
    entityId : Text
    date : Maybe Day
    dayOfWeek : Maybe Text
    specialDayType : SpecialDayType
    description : Maybe Text
    businessHours : "[Id BusinessHour]"

  constraints :
    id : PrimaryKey | NotNull
    entityId : NotNull
    specialDayType : NotNull
    businessHours : NotNull
  types:
    SpecialDayType:
      enum: "Open,Closed"

BusinessHour:
  tableName: business_hour

  fields:
    id: Id BusinessHour
    btype: BusinessHourType # Slot TimeOfDay | Duration TimeOfDay TimeOfDay
    categoryId: "[Id ServiceCategory]"
  types:
    BusinessHourType:
      enum: "A,B"

  constraints :
    id : PrimaryKey | NotNull
    btype : NotNull
    categoryId : NotNull

ServiceCategory:
  tableName: service_category

  fields:
    id: Id ServiceCategory
    name: Text
    description: Text
    availableSeats: Maybe Int
    allowedSeats: Maybe Int
    peopleCategory: "[Id ServicePeopleCategory]"

  constraints :
    id : PrimaryKey | NotNull
    name : NotNull
    description : NotNull

ServicePeopleCategory:
  tableName: service_people_category

  fields:
    id: Id ServicePeopleCategory
    name: Text
    description: Text
    pricePerUnit: Int

  constraints :
    id : PrimaryKey|NotNull
    name : NotNull
    description : NotNull
    pricePerUnit : NotNull

SeatManagement:
  tableName: seat_management

  fields:
    id: Id SeatManagement
    date: Day
    ticketServiceCategoryId: Id ServiceCategory
    booked: Int
    blocked: Int

  constraints :
    id : PrimaryKey|NotNull
    date : NotNull
    ticketServiceCategoryId : NotNull
    booked : NotNull
    blocked : NotNull

  default:
    booked: "0"
    blocked: "0"

### Ticket Booking ###
TicketBooking:
  tableName: ticket_booking

  fields:
    id: Id TicketBooking
    shortId: ShortId TicketBooking
    merchantOperatingCityId: Id MerchantOperatingCity
    ticketPlaceId: Id TicketPlace
    personId: Id Person
    amount: HighPrecMoney
    visitDate: Day
    status: BookingStatus
    createdAt: UTCTime
    updatedAt: UTCTime

  constraints:
    id: PrimaryKey|NotNull
    shortId: SecondaryKey|NotNull
    merchantOperatingCityId: NotNull
    ticketPlaceId: NotNull
    personId: SecondaryKey|NotNull
    amount: NotNull
    visitDate: NotNull
    status: NotNull
    createdAt: NotNull
    updatedAt: NotNull
  types:
    BookingStatus:
      enum: "Pending,Confirmed,Cancelled,Expired"

  default:
    createdAt: CURRENT_TIMESTAMP
    updatedAt: CURRENT_TIMESTAMP

TicketBookingService:
  tableName: ticket_booking_service

  fields:
    id: Id TicketBookingService
    shortId: ShortId TicketBookingService
    ticketBookingId: Id TicketBooking
    ticketServiceId: Id TicketService
    merchantOperatingCityId: Id MerchantOperatingCity
    amount: HighPrecMoney
    status: ServiceStatus
    verificationCount: Int
    btype: BusinessHourType
    expiryDate: Maybe UTCTime
    createdAt: UTCTime
    updatedAt: UTCTime

  types:
    ServiceStatus:
      enum: "Pending,Confirmed,Cancelled,Expired"
    BusinessHourType:
      enum: "DinKaSamay,RatKaSamay"

  constraints:
    id: PrimaryKey|NotNull
    shortId: NotNull
    ticketBookingId: NotNull
    ticketServiceId: NotNull
    merchantOperatingCityId: NotNull
    amount: NotNull
    status: NotNull
    verificationCount: NotNull
    btype: NotNull
    createdAt: NotNull
    updatedAt: NotNull

  default:
    createdAt: CURRENT_TIMESTAMP
    updatedAt: CURRENT_TIMESTAMP

TicketBookingServiceCategory:
  tableName: ticket_booking_service_category

  fields:
    id: Id TicketBookingServiceCategory
    ticketBookingServiceId: Id TicketBookingService
    name: Text
    bookedSeats: Int
    amount: HighPrecMoney
  constraints:
    id: PrimaryKey|NotNull

TicketBookingPeopleCategory:
  tableName: ticket_booking_people_category

  fields:
    id: Id TicketBookingPeopleCategory
    ticketBookingServiceCategoryId: Id TicketBookingPeopleCategory
    name: Text
    pricePerUnit: HighPrecMoney
    numberOfUnits: Int
  constraints:
    id: PrimaryKey|NotNull