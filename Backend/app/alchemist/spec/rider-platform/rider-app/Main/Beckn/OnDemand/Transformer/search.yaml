imports:
  Text: Data.Text
  UTCTime: Kernel.Prelude
  BaseUrl: Kernel.Prelude
  MonadFlow: Kernel.Types.App
  HasFlowEnv: Kernel.Types.App
  SearchReqLocation: Domain.Action.UI.Search.Common
  SearchRequest: Domain.Types.SearchRequest
  Meters: Kernel.Types.Common
  Seconds: Kernel.Types.Common
  Language: Tools.Maps
  Merchant: Domain.Types.Merchant
  LatLong: Tools.Maps
  SearchReqMessage: BecknV2.OnDemand.Types
  Intent: BecknV2.OnDemand.Types
  Fulfillment: BecknV2.OnDemand.Types
  Customer: BecknV2.OnDemand.Types
  Person: BecknV2.OnDemand.Types
  mkStops: Beckn.OnDemand.Utils.Common
  mkSearchFulFillmentTags: Beckn.OnDemand.Utils.Search
  mkCustomerInfoTags: Beckn.OnDemand.Utils.Search
  Payment: BecknV2.OnDemand.Types
  mkPaymentTags: Beckn.OnDemand.Utils.Common
  Domain: Kernel.Types.Beckn.Context
  Action: Kernel.Types.Beckn.Context
  City: Kernel.Types.Beckn.Context
  Country: Kernel.Types.Beckn.Context
  Context: BecknV2.OnDemand.Types
  Bool: Kernel.Prelude
  showBaseUrl: Kernel.Prelude
  buildContextV2: BecknV2.OnDemand.Utils.Context
  getCurrentTime: Kernel.Types.Time
  fromText: Data.UUID
  SearchReq: BecknV2.OnDemand.Types


module: Search
transformer:
  monads:
  - MonadFlow m
  transformers:
    buildBecknSearchReqV2:
      params:
        - action: Action
        - domain: Domain
        - origin: SearchReqLocation
        - destination: SearchReqLocation
        - searchId : Id SearchRequest
        - distance: Maybe Meters
        - duration: Maybe Seconds
        - customerLanguage: Maybe Language
        - disabilityTag: Maybe Text
        - merchant: Merchant
        - bapUri: BaseUrl
        - mbPoints: Maybe [LatLong]
        - mbPhoneNumber: Maybe Text
        - isReallocationEnabled: Maybe Bool
      toType: SearchReq
      mapping:
        searchReqContext: /~_buildContextV2 action domain searchId.getId (Just searchId.getId) merchant.bapId bapUri Nothing Nothing merchant.defaultCity merchant.country
        searchReqMessage: /~buildSearchMessageV2 origin destination distance duration customerLanguage disabilityTag mbPoints mbPhoneNumber isReallocationEnabled

    buildSearchMessageV2:
      params:
        - origin: SearchReqLocation
        - destination: SearchReqLocation
        - distance: Maybe Meters
        - duration: Maybe Seconds
        - customerLanguage: Maybe Language
        - disabilityTag: Maybe Text
        - mbPoints: Maybe [LatLong]
        - mbPhoneNumber: Maybe Text
        - isReallocationEnabled: Maybe Bool
      toType: SearchReqMessage
      mapping:
        searchReqMessageIntent: /~tfIntent origin destination customerLanguage disabilityTag distance duration mbPoints mbPhoneNumber isReallocationEnabled <&> Just

    tfIntent:
      params:
        - origin: SearchReqLocation
        - destination: SearchReqLocation
        - customerLanguage: Maybe Language
        - disabilityTag: Maybe Text
        - distance: Maybe Meters
        - duration: Maybe Seconds
        - mbPoints: Maybe [LatLong]
        - mbPhoneNumber: Maybe Text
        - isReallocationEnabled: Maybe Bool
      toType: Intent
      mapping:
        intentFulfillment: /~tfFulfillment origin destination customerLanguage disabilityTag distance duration mbPoints mbPhoneNumber isReallocationEnabled <&> Just
        intentPayment: /~tfPayment "BPP" <&> Just
        intentTags: Nothing

    tfFulfillment:
      params:
        - origin: SearchReqLocation
        - destination: SearchReqLocation
        - customerLanguage: Maybe Language
        - disabilityTag: Maybe Text
        - distance: Maybe Meters
        - duration: Maybe Seconds
        - mbPoints: Maybe [LatLong]
        - mbPhoneNumber: Maybe Text
        - isReallocationEnabled: Maybe Bool
      toType: Fulfillment
      mapping:
        fulfillmentStops: ~_mkStops origin destination
        fulfillmentCustomer: /~tfCustomer customerLanguage disabilityTag mbPhoneNumber <&> Just
        fulfillmentTags: ~_mkSearchFulFillmentTags distance duration mbPoints isReallocationEnabled
        fulfillmentAgent: Nothing
        fulfillmentId: Nothing
        fulfillmentState: Nothing
        fulfillmentType: Nothing
        fulfillmentVehicle: Nothing

    tfCustomer:
      params:
        - customerLanguage: Maybe Language
        - disabilityTag: Maybe Text
        - mbPhoneNumber: Maybe Text
      toType: Customer
      mapping:
        customerPerson: /~tfPerson customerLanguage disabilityTag mbPhoneNumber <&> Just
        customerContact: Nothing

    tfPerson:
      params:
        - customerLanguage: Maybe Language
        - disabilityTag: Maybe Text
        - mbPhoneNumber: Maybe Text
      toType: Person
      mapping:
        personTags: ~_mkCustomerInfoTags customerLanguage disabilityTag mbPhoneNumber
        personName: Nothing
        personId: Nothing

    tfPayment:
      params:
        - collectedBy: Text
      toType: Payment
      mapping:
        paymentCollectedBy: Just collectedBy
        paymentTags: ~_mkPaymentTags
        paymentId: Nothing
        paymentParams: Nothing
        paymentStatus: Nothing
        paymentType: Nothing

# ~  -> pure    Haskell functions
# /~ -> impure  Haskell functions
